// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//================================
// ENUMS
//================================
enum Tipotransaccion {
  COMPRA
  VENTA
}

//================================
// MODELOS
//================================
model Rol {
  id        Int      @id @default(autoincrement())
  tipo      String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  personas Persona[]

  @@map("rols")
}

model Departamento {
  id        Int      @id @default(autoincrement())
  nombre    String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  provincias  Provincia[]
  personas    Persona[]
  puntoventas Puntoventa[]

  @@map("departamentos")
}

model Provincia {
  id        Int      @id @default(autoincrement())
  nombre    String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  departamento   Departamento @relation(fields: [departamentoId], references: [id])
  departamentoId Int          @map("departamento_id")

  distritos   Distrito[]
  personas    Persona[]
  puntoventas Puntoventa[]

  @@map("provincias")
}

model Distrito {
  id        Int      @id @default(autoincrement())
  nombre    String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  provincia   Provincia @relation(fields: [provinciaId], references: [id])
  provinciaId Int       @map("provincia_id")

  personas    Persona[]
  puntoventas Puntoventa[]

  @@map("distritos")
}

model Persona {
  id        Int      @id @default(autoincrement())
  nombre    String
  apellidos String
  dni       String   @unique
  telefono  String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  departamento   Departamento @relation(fields: [departamentoId], references: [id])
  departamentoId Int          @map("departamento_id")

  provincia   Provincia @relation(fields: [provinciaId], references: [id])
  provinciaId Int       @map("provincia_id")

  distrito   Distrito @relation(fields: [distritoId], references: [id])
  distritoId Int      @map("distrito_id")

  rol   Rol @relation(fields: [rolId], references: [id])
  rolId Int @map("rol_id")

  user User?

  // Relación uno a uno se define con ? en el lado no principal
  negocio     Negocio?
  puntoventas Puntoventa[]

  @@map("personas")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  isActive  Boolean  @default(true) @map("IsActive")
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  persona   Persona @relation(fields: [personaId], references: [id])
  personaId Int     @unique @map("persona_id")

  @@map("users")
}

model Rubro {
  id        Int      @id @default(autoincrement())
  nombre    String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  negocios Negocio[]

  @@map("rubros")
}

model Tipoduenonegocio {
  id        Int      @id @default(autoincrement())
  tipo      String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  negocios Negocio[]

  @@map("tipoduenonegocios")
}

model Negocio {
  id          Int      @id @default(autoincrement())
  razonSocial String
  ruc         String?
  createdAt   DateTime @default(now()) @map("created_At")
  updatedAt   DateTime @updatedAt @map("updated_At")

  rubro   Rubro @relation(fields: [rubroId], references: [id])
  rubroId Int   @map("rubro_id")

  tipoduenonegocio   Tipoduenonegocio @relation(fields: [tipoduenonegocioId], references: [id])
  tipoduenonegocioId Int              @map("tipoduenonegocio_id")

  persona   Persona @relation(fields: [personaId], references: [id])
  personaId Int     @unique @map("distribuidor_id")

  puntoventas            Puntoventa[]
  productos              Producto[]
  prodpresentaciontamano Prodpresentaciontamano[]
  pagoaproveedores       Pagoaproveedor[]
  movisaldoproveedores   Movisaldoproveedor[]
  saldoproveedores       Saldoproveedor[]

  @@map("negocios")
}

model Puntoventa {
  id              Int      @id @default(autoincrement())
  nombrecomercial String   @unique
  direccion       String   @map("direcion") // Corrección ortográfica
  createdAt       DateTime @default(now()) @map("created_At")
  updatedAt       DateTime @updatedAt @map("updated_At")

  negocio   Negocio @relation(fields: [negocioId], references: [id])
  negocioId Int     @map("negocio_id")

  persona   Persona @relation(fields: [personaId], references: [id])
  personaId Int     @map("encargado_id")

  departamento   Departamento @relation(fields: [departamentoId], references: [id])
  departamentoId Int          @map("departamento_id")

  provincia   Provincia @relation(fields: [provinciaId], references: [id])
  provinciaId Int       @map("provincia_id")

  distrito   Distrito @relation(fields: [distritoId], references: [id])
  distritoId Int      @map("distrito_id")

  transacciones     Transaccion[]
  pagodeclientes    Pagodecliente[]
  movisaldoclientes Movisaldocliente[]
  saldoclientes     Saldocliente[]

  @@map("puntoventas")
}

model Tipoproducto {
  id        Int      @id @default(autoincrement())
  nombre    String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  productos Producto[]

  @@map("tipoproductos")
}

model Producto {
  id        Int      @id @default(autoincrement())
  nombre    String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  tipoproducto   Tipoproducto @relation(fields: [tipoproductoId], references: [id])
  tipoproductoId Int          @map("tipoproducto_id")

  negocios          Negocio[]
  productovariantes Productovariante[]

  @@map("productos")
}

model Unidad {
  id        Int      @id @default(autoincrement())
  nombre    String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  prodpresentaciones Prodpresentacion[]

  @@map("unidades")
}

model Prodpresentacion {
  id        Int      @id @default(autoincrement())
  empaque   String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  unidades               Unidad[]
  prodpresentaciontamano Prodpresentaciontamano[]

  @@map("prodpresentacion")
}

model Prodpresentaciontamano {
  id        Int      @id @default(autoincrement())
  tamano    String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  prodpresentacion   Prodpresentacion @relation(fields: [prodpresentacionId], references: [id])
  prodpresentacionId Int              @map("prodpresentacion_id")

  negocios          Negocio[]
  productovariantes Productovariante[]

  @@map("prodpresentaciontamanos")
}

model Productovariante {
  id           Int      @id @default(autoincrement())
  costo        Float
  preciosinigv Float
  precioconigv Float
  stock        Int
  createdAt    DateTime @default(now()) @map("created_At")
  updatedAt    DateTime @updatedAt @map("updated_At")

  productos  Producto @relation(fields: [productoId], references: [id])
  productoId Int      @map("producto_id")

  prodpresentaciontamano   Prodpresentaciontamano @relation(fields: [prodpresentaciontamanoId], references: [id])
  prodpresentaciontamanoId Int                    @map("prodpresentaciontamano_id")

  movinventario Movinventario[]
  inventarios   Inventario[]

  @@map("productovariantes")
}

model Transaccion {
  id           Int             @id @default(autoincrement())
  fechaentrega DateTime
  valortrans   Float
  estado       String
  tipotrans    Tipotransaccion
  createdAt    DateTime        @default(now()) @map("created_At")
  updatedAt    DateTime        @updatedAt @map("updated_At")

  puntoventa   Puntoventa @relation(fields: [puntoventaId], references: [id])
  puntoventaId Int        @map("puntoventa_id")

  transacciondetalles  Transacciondetalle[]
  transaccionprocesada Transaccionprocesada[]
  movinventario        Movinventario[]

  @@map("transacciones")
}

model Transacciondetalle {
  id         Int      @id @default(autoincrement())
  cantidad   Float
  preciounit Float
  subtotal   Float
  createdAt  DateTime @default(now()) @map("created_At")
  updatedAt  DateTime @updatedAt @map("updated_At")

  transaccion   Transaccion @relation(fields: [transaccionId], references: [id])
  transaccionId Int         @map("transaccion_id")

  @@map("transacciondetalles")
}

model Transaccionprocesada {
  id             Int             @id @default(autoincrement())
  valortransproc Float?
  tipotrans      Tipotransaccion
  createdAt      DateTime        @default(now()) @map("created_At")
  updatedAt      DateTime        @updatedAt @map("updated_At")

  transaccion   Transaccion @relation(fields: [transaccionId], references: [id])
  transaccionId Int         @unique @map("transaccion_id")

  @@map("transaccionprocesadas")
}

model Tipomovistock {
  id        Int      @id @default(autoincrement())
  tipo      String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  movinventario Movinventario[]

  @@map("tipomovistocks")
}

model Movinventario {
  id        Int      @id @default(autoincrement())
  cantidad  Int
  razon     String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  tipomovistock   Tipomovistock @relation(fields: [tipomovistockId], references: [id])
  tipomovistockId Int           @map("tipomovistock_id")

  transaccion   Transaccion @relation(fields: [transaccionId], references: [id])
  transaccionId Int         @map("transaccion_id")

  productovariante   Productovariante @relation(fields: [productovarianteId], references: [id])
  productovarianteId Int              @map("productovariante_id")

  @@map("movinventarios")
}

model Inventario {
  id              Int      @id @default(autoincrement())
  stockfisico     Int
  stockdisponible Int
  createdAt       DateTime @default(now()) @map("created_At")
  updatedAt       DateTime @updatedAt @map("updated_At")

  productovariante   Productovariante @relation(fields: [productovarianteId], references: [id])
  productovarianteId Int              @map("productovariante_id")

  @@map("inventarios")
}

model Tipopago {
  id        Int      @id @default(autoincrement())
  tipo      String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  pagodeclientes   Pagodecliente[]
  pagoaproveedores Pagoaproveedor[]

  @@map("tipopagos")
}

model Tipomovimiento {
  id        Int      @id @default(autoincrement())
  tipo      String
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  movisaldoclientes    Movisaldocliente[]
  movisaldoproveedores Movisaldoproveedor[]

  @@map("tipomovimientos")
}

model Pagodecliente {
  id        Int      @id @default(autoincrement())
  monto     Float
  detalle   String?
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  tipopago   Tipopago @relation(fields: [tipopagoId], references: [id])
  tipopagoId Int      @map("tipopago_id")

  puntoventa   Puntoventa @relation(fields: [puntoventaId], references: [id])
  puntoventaId Int        @map("puntoventa_id")

  @@map("pagodeclientes")
}

model Movisaldocliente {
  id            Int      @id @default(autoincrement())
  movimiento_id Int
  createdAt     DateTime @default(now()) @map("created_At")
  updatedAt     DateTime @updatedAt @map("updated_At")

  puntoventa   Puntoventa @relation(fields: [puntoventaId], references: [id])
  puntoventaId Int        @map("puntoventa_id")

  tipomovimiento   Tipomovimiento @relation(fields: [tipomovimientoId], references: [id])
  tipomovimientoId Int            @map("tipomovimiento_id")

  @@map("movisaldoclientes")
}

model Saldocliente {
  id          Int      @id @default(autoincrement())
  saldoactual Float
  createdAt   DateTime @default(now()) @map("created_At")
  updatedAt   DateTime @updatedAt @map("updated_At")

  puntoventa   Puntoventa @relation(fields: [puntoventaId], references: [id])
  puntoventaId Int        @map("puntoventa_id")

  @@map("saldoclientes")
}

model Pagoaproveedor {
  id        Int      @id @default(autoincrement())
  monto     Float
  detalle   String?
  createdAt DateTime @default(now()) @map("created_At")
  updatedAt DateTime @updatedAt @map("updated_At")

  tipopago   Tipopago @relation(fields: [tipopagoId], references: [id])
  tipopagoId Int      @map("tipopago_id")

  negocio   Negocio @relation(fields: [negocioId], references: [id])
  negocioId Int     @map("negocio_id")

  @@map("pagoaproveedores")
}

model Movisaldoproveedor {
  id            Int      @id @default(autoincrement())
  movimiento_id Int
  createdAt     DateTime @default(now()) @map("created_At")
  updatedAt     DateTime @updatedAt @map("updated_At")

  negocio   Negocio @relation(fields: [negocioId], references: [id])
  negocioId Int     @map("negocio_id")

  tipomovimiento   Tipomovimiento @relation(fields: [tipomovimientoId], references: [id])
  tipomovimientoId Int            @map("tipomovimiento_id")

  @@map("movisaldoproveedores")
}

model Saldoproveedor {
  id          Int      @id @default(autoincrement())
  saldoactual Float
  createdAt   DateTime @default(now()) @map("created_At")
  updatedAt   DateTime @updatedAt @map("updated_At")

  negocio   Negocio @relation(fields: [negocioId], references: [id])
  negocioId Int     @map("negocio_id")

  @@map("saldoproveedores")
}
